---
- name: install RKE2 prerequisites
  apt:
    name:
      - curl
      - apparmor-utils
      - iptables
      - ca-certificates
    state: latest
    cache_valid_time: 86400
  tags:
    - rke2_packages
    - apt_packages

- name: create RKE2 config dir
  file:
    path: /etc/rancher/rke2
    state: directory
  tags:
    - rke2_config_dir

- name: create dir for various downloaded files
  file:
    path: /root/install
    state: directory
  tags:
    - rke2_root_install_dir

- name: configure RKE2 tls-san
  ansible.builtin.template:
    src: "config.j2"
    dest: "/etc/rancher/rke2/config.yaml"
  tags:
    - rke2_tls-san

- name: configure PATH to kubectl for all users
  ansible.builtin.copy:
    src: rke2-bash-profile
    dest: /etc/profile.d/rke2.sh
    owner: root
    group: root
    mode: '0755'
  tags:
    - rke2_kubectl_path
    - rke2_kubectl_path_bashrc

# check_mode return changed in check mode, it was fixed in
# Ansible 2.13.0, https://github.com/ansible/ansible/issues/65687
- name: download rke2 installer
  ansible.builtin.get_url:
    url: https://get.rke2.io
    dest: /usr/local/bin/rke2-install.sh
    mode: '0755'
    backup: true
  tags:
    - rke2_download

# versions of rke2 are listed here:
#    https://github.com/ansible/ansible/issues/65687
# but we are OK with any present
- name: exec rke2 installer
  ansible.builtin.shell:
    cmd: /usr/local/bin/rke2-install.sh
    creates: /usr/local/bin/rke2
  tags:
    - rke2_install

- name: enable & start rke service
  ansible.builtin.systemd:
    name: rke2-server.service
    enabled: yes
    masked: no
    state: started
  tags:
    - rke2_enable_and_start

- name: create var with paths
  set_fact:
    kube_cfg_dir:
    - '/root/.kube'
    - '/home/czertainly/.kube'

# this and later command is needed to kubectl start working
- name: create kube config dir
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items: "{{ kube_cfg_dir }}"
  tags:
    - kube_config
    - kube_config_dir

- name: copy kube config
  ansible.builtin.file:
    src: /etc/rancher/rke2/rke2.yaml
    dest: "{{ item }}/config"
    owner: root
    group: root
    state: link
  with_items: "{{ kube_cfg_dir }}"
  tags:
    - kube_config

- name: update network policy
  kubernetes.core.k8s:
    namespace: default
    state: present
    src: networkpolicy.yaml
  tags:
    - rke2_network-policy

- name: wait to start of instalation of rke2
  include: wait2complete.yml
  vars:
    pod_name: "kube-scheduler-{{ ansible_hostname }}"
    namespace: kube-system
  tags:
    kube-system-wait
  when: not ansible_check_mode

- name: wait to complete instalation of rke2
  include: wait2complete.yml
  vars:
    namespace: kube-system
  tags:
    kube-system-wait
  when: not ansible_check_mode
